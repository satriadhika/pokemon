{"version":3,"sources":["assets/datas/DataType.js","Containers/DetailPokemon/DetailPokemon.js","Containers/PokemmonList/PokemonList.js","App.js","reportWebVitals.js","index.js"],"names":["dataType","type","backgroundColor","color","DetailPokemon","props","state","error","pokemon","grow","abilities","tipe","stats","console","log","this","fetch","url","then","res","json","result","setState","types","catch","image","id","audienses","map","tile","index","ability","name","backGround","i","length","j","Fab","variant","className","stat","base_stat","Card","Grid","container","spacing","item","xs","sm","Paper","GridList","cols","cellHeight","Grow","in","GridListTile","style","height","width","src","alt","items","Typography","gutterBottom","weight","Component","PokemonList","pokemons","count","open","credentials","headers","body","JSON","stringify","query","variables","limit","offset","method","data","results","value","gqlVariables","handleOpenCloseDetail","currentState","GridListTileBar","title","actionIcon","IconButton","onClick","Pagination","toFixed","defaultPage","onChange","event","setPage","boundaryCount","Dialog","fullScreen","onClose","AppBar","Toolbar","edge","aria-label","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0d3806c.chunk.js","sourcesContent":["const dataType =[\n    {\n        type:\"normal\",\n        backgroundColor:\"grey\",\n        color:\"white\"\n    },\n    {\n        type:\"fighting\",\n        backgroundColor:\"orange\",\n        color:\"white\"\n    },\n    {\n        type:\"flying\",\n        backgroundColor:\"skyBlue\",\n        color:\"black\"\n    },\n    {\n        type:\"poison\",\n        backgroundColor:\"plum\",\n        color:\"black\"\n    },\n    {\n        type:\"ground\",\n        backgroundColor:\"sandybrown\",\n        color:\"black\"\n    },\n    {\n        type:\"rock\",\n        backgroundColor:\"goldenrod\",\n        color:\"black\"\n    },\n    {\n        type:\"bug\",\n        backgroundColor:\"green\",\n        color:\"white\"\n    },\n    {\n        type:\"ghost\",\n        backgroundColor:\"purple\",\n        color:\"white\"\n    },\n    {\n        type:\"steel\",\n        backgroundColor:\"grey\",\n        color:\"white\"\n    },\n    {\n        type:\"fire\",\n        backgroundColor:\"red\",\n        color:\"white\"\n    },\n    {\n        type:\"water\",\n        backgroundColor:\"blue\",\n        color:\"white\"\n    },\n    {\n        type:\"grass\",\n        backgroundColor:\"greenyellow\",\n        color:\"black\"\n    },\n    {\n        type:\"electric\",\n        backgroundColor:\"yellow\",\n        color:\"black\"\n    },\n    {\n        type:\"psychic\",\n        backgroundColor:\"palevioletred\",\n        color:\"black\"\n    },\n    {\n        type:\"ice\",\n        backgroundColor:\"aqua\",\n        color:\"black\"\n    },\n    {\n        type:\"dragon\",\n        backgroundColor:\"orangered\",\n        color:\"white\"\n    },\n    {\n        type:\"dark\",\n        backgroundColor:\"dimgray\",\n        color:\"white\"\n    },\n    {\n        type:\"fairy\",\n        backgroundColor:\"pink\",\n        color:\"black\"\n    },\n    {\n        type:\"unknown\",\n        backgroundColor:\"azure\",\n        color:\"black\"\n    },\n    {\n        type:\"shadow\",\n        backgroundColor:\"black\",\n        color:\"white\"\n    }\n];\n\nexport default dataType;","import React, { Component } from 'react'\nimport './DetailPokemon.css';\nimport '../../App.css';\nimport { Card, Grid, Paper } from '@material-ui/core';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Grow from '@material-ui/core/Grow';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport dataType from '../../assets/datas/DataType.js';\n\n/**\n* @author\n* @function DetailPokemon\n**/\n\nclass DetailPokemon extends Component{\n \n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      pokemon: [],\n      grow: false,\n      abilities:[],\n      tipe:[],\n      stats:[]\n    };\n  }\n\n    componentDidMount() {\n      console.log(this.props)\n      fetch(this.props.url)\n        .then(res => res.json())\n        .then((result) => {\n          this.setState({ \n            pokemon: result, \n            abilities :result.abilities,\n            tipe : result.types,\n            stats : result.stats,\n            grow:true})\n        })\n        .catch(console.log)\n      }\n\n\n\n      render() {\n        const {pokemon}=this.state\n        const image=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/\"+pokemon.id+\".png\"\n        console.log(pokemon)\n        var audienses = this.state.abilities.map((tile,index) => (\n          <ul>\n            <li>\n              {tile.ability.name}\n            </li>\n          </ul>\n       ));\n       let color = []\n       let backGround = []\n       for(let i=0; i<dataType.length;i++){\n         for(let j =0;j<this.state.tipe.length;j++){\n           if(dataType[i].type===this.state.tipe[j].type.name){\n             color[j]=dataType[i].color+\" !important\"\n             backGround[j]=dataType[i].backgroundColor+\" !important\"\n           }\n         }\n        }\n        \n       var type = this.state.tipe.map((tipe,index) =>(\n            <Fab variant=\"extended\" className='fab'>\n              {tipe.type.name}\n            </Fab>\n       ));\n\n       var stats = this.state.stats.map((stat,index) =>(\n          <ul>\n            <li>\n              {stat.stat.name} : {stat.base_stat} /100\n            </li>\n          </ul>\n       ));\n        return(\n          <Card className='card'>\n          <Grid container spacing={3} className='grid'>\n          <Grid item xs={12} sm={4}>\n            <Paper className='pokedex-pokemon-profile'>\n            <GridList cols={1} cellHeight={180} className='gridListDetail'>\n            <Grow in={this.state.grow}>\n              <GridListTile className='gridTileDetail' key={pokemon.id}  style={{ height: 'max-content !important', width: 'max-content !important' }}>\n              <img src={image} alt={pokemon.name}  className='imagesDetail'/>\n              </GridListTile>\n            </Grow>\n            </GridList>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={8}>\n            <Paper>\n              <Grid container spacing={3} className='grid'>\n                <Grid items xs={12} sm={5}>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Height\n                  </Typography>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                  {pokemon.height}\"\n                  </Typography>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Weight\n                  </Typography>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                  {pokemon.weight}lbs\n                  </Typography>\n              <Typography variant=\"h5\" gutterBottom>\n                Types\n              </Typography>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                {type}\n              </Typography>\n                </Grid>\n                <Grid items xs={12} sm={6}>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Abilities\n                  </Typography>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    {audienses}\n                  </Typography>\n              <Typography variant=\"h5\" gutterBottom>\n                Stats\n              </Typography>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                {stats}\n              </Typography>\n                </Grid>\n              </Grid>\n            </Paper>\n            <Paper>\n            </Paper>\n          </Grid>\n          \n          </Grid>\n          </Card>\n        )\n      }\n }\n\nexport default DetailPokemon;","import React, { Component } from 'react'\nimport './PokemonList.css';\nimport '../../App.css';\nimport Card from '@material-ui/core/Card';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Grow from '@material-ui/core/Grow';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DetailPokemon from '../DetailPokemon/DetailPokemon';\n/**\n* @author\n* @function PokemonList\n**/\n\n\nclass PokemonList extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      pokemons: [],\n      grow: false,\n      count:0,\n      open:false,\n      url:''\n    };\n  }\n\n    componentDidMount() {\n      const gqlQueryPokemon = `query pokemons($limit: Int, $offset: Int) {\n        pokemons(limit: $limit, offset: $offset) {\n          count\n          next\n          previous\n          status\n          message\n          results {\n            url\n            name\n            image\n          }\n        }\n      }`;\n      const gqlVariables = {\n        limit: 20,\n        offset: 0,\n      };\n\n        fetch(\"https://graphql-pokeapi.vercel.app/api/graphql\",{\n        credentials: 'omit',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          query: gqlQueryPokemon,\n          variables: gqlVariables,\n        \n        }),\n        method: 'POST',\n      })\n        .then(res => res.json())\n        .then((result) => {\n          this.setState({ \n            pokemons: result.data.pokemons.results, \n            grow:true,\n            count:result.data.pokemons.count })\n        })\n        .catch(console.log)\n      }\n\n      setPage(value){\n        const gqlQueryPokemon = `query pokemons($limit: Int, $offset: Int) {\n          pokemons(limit: $limit, offset: $offset) {\n            count\n            next\n            previous\n            status\n            message\n            results {\n              url\n              name\n              image\n            }\n          }\n        }`;\n\n        const gqlVariables = {\n          limit: 20,\n          offset: (value-1)*20,\n        };\n        fetch(\"https://graphql-pokeapi.vercel.app/api/graphql\",{\n        credentials: 'omit',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          query: gqlQueryPokemon,\n          variables: gqlVariables,\n        \n        }),\n        method: 'POST',\n      })\n        .then(res => res.json())\n        .then((result) => {\n          this.setState({ \n            pokemons: result.data.pokemons.results, \n            grow:true,\n            count:result.data.pokemons.count })\n        })\n        .catch(console.log)\n      }\n\n\n      render() {\n        const {count}=this.state\n        const handleOpenCloseDetail=(url)=>{\n          const currentState = this.state.open\n          this.setState({ open : !currentState,url:url})\n        }\n        const handleChange = (event, value) => {\n          this.setPage(value);\n        };\n        var audienses = this.state.pokemons.map((tile,index) => (\n          <Grow in={this.state.grow}>\n                          <GridListTile className='gridTile' key={tile.name} >\n                            <img src={tile.image} alt={tile.name} />\n                            <GridListTileBar\n                              className='gridListTileBar'\n                              title={tile.name}   \n                              actionIcon={\n                                <IconButton className='icon' onClick={()=>handleOpenCloseDetail(tile.url)}>\n                                  <InfoIcon />\n                                </IconButton>\n                              }\n                            />\n                        </GridListTile>\n                        </Grow>\n       ));\n        return(\n              <Card className='card'>\n                  <div className='header'>\n                      List Pokemon\n                  </div>\n                  <div className='search'>\n                    Ini buat search\n                  </div>\n                  <div className='list'>\n                    <Card className='card-value'>\n                    <GridList cols={4} cellHeight={180} className='gridList'>\n                      <GridListTile cols={4} style={{ height: 'auto' }}>\n                      </GridListTile>\n                        {audienses}\n                     </GridList>\n                     <div className='pagination'>\n                     <Pagination count={(count/20).toFixed(0)} defaultPage={1} onChange={handleChange} boundaryCount={2} />\n                     </div>\n                     </Card>\n                 </div>\n\n                 <Dialog fullScreen open={this.state.open} onClose={handleOpenCloseDetail} >\n                  <AppBar className='appBar'>\n                    <Toolbar>\n                      <IconButton edge=\"start\" color=\"inherit\" onClick={handleOpenCloseDetail} aria-label=\"close\">\n                        <CloseIcon />\n                      </IconButton>\n                      <Typography variant=\"h6\" className='title'>\n                        Pokemon Detail\n                      </Typography>\n                    </Toolbar>\n                  </AppBar>\n                  <DetailPokemon url={this.state.url}/>\n                </Dialog>\n              </Card>\n             )\n      \n      }\n}\n\nexport default PokemonList;\n","import './App.css';\nimport PokemonList from './Containers/PokemmonList/PokemonList';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <PokemonList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}