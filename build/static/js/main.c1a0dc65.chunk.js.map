{"version":3,"sources":["Containers/DetailPokemon/DetailPokemon.js","Containers/PokemmonList/PokemonList.js","App.js","reportWebVitals.js","index.js"],"names":["DetailPokemon","props","state","error","pokemon","grow","console","log","this","fetch","url","then","res","json","result","setState","catch","image","id","Card","className","Grid","container","spacing","item","xs","sm","Paper","GridList","cols","cellHeight","Grow","in","GridListTile","style","height","width","src","alt","name","Component","PokemonList","pokemons","count","open","credentials","headers","body","JSON","stringify","query","variables","limit","offset","method","data","results","value","gqlVariables","handleOpenCloseDetail","currentState","audienses","map","tile","index","GridListTileBar","title","actionIcon","IconButton","onClick","Pagination","toFixed","defaultPage","onChange","event","setPage","boundaryCount","Dialog","fullScreen","onClose","AppBar","Toolbar","edge","color","aria-label","Typography","variant","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1a0dc65.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './DetailPokemon.css';\nimport '../../App.css';\nimport { Card, Grid, Paper } from '@material-ui/core';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Grow from '@material-ui/core/Grow';\n\n/**\n* @author\n* @function DetailPokemon\n**/\n\nclass DetailPokemon extends Component{\n \n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      pokemon: [],\n      grow: false,\n      \n    };\n  }\n\n    componentDidMount() {\n      console.log(this.props)\n      fetch(this.props.url)\n        .then(res => res.json())\n        .then((result) => {\n          this.setState({ \n            pokemon: result, \n            grow:true})\n        })\n        .catch(console.log)\n      }\n\n\n\n      render() {\n        const {pokemon}=this.state\n        const image=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/\"+pokemon.id+\".png\"\n        console.log(pokemon)\n        return(\n          <Card className='card'>\n          <Grid container spacing={3} className='grid'>\n          <Grid item xs={12} sm={4}>\n            <Paper className='pokedex-pokemon-profile'>\n            <GridList cols={1} cellHeight={180} className='gridListDetail'>\n            <Grow in={this.state.grow}>\n              <GridListTile className='gridTileDetail' key={pokemon.id}  style={{ height: 'max-content !important', width: 'max-content !important' }}>\n              <img src={image} alt={pokemon.name}  className='imagesDetail'/>\n              </GridListTile>\n            </Grow>\n            </GridList>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={8}>\n            <Paper>\n              test\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper>\n              grid\n            </Paper>\n          </Grid>\n          </Grid>\n          </Card>\n        )\n      }\n }\n\nexport default DetailPokemon;","import React, { Component } from 'react'\nimport './PokemonList.css';\nimport '../../App.css';\nimport Card from '@material-ui/core/Card';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Grow from '@material-ui/core/Grow';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DetailPokemon from '../DetailPokemon/DetailPokemon';\n/**\n* @author\n* @function PokemonList\n**/\n\n\nclass PokemonList extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      pokemons: [],\n      grow: false,\n      count:0,\n      open:false,\n      url:''\n    };\n  }\n\n    componentDidMount() {\n      const gqlQueryPokemon = `query pokemons($limit: Int, $offset: Int) {\n        pokemons(limit: $limit, offset: $offset) {\n          count\n          next\n          previous\n          status\n          message\n          results {\n            url\n            name\n            image\n          }\n        }\n      }`;\n      const gqlVariables = {\n        limit: 20,\n        offset: 0,\n      };\n\n        fetch(\"https://graphql-pokeapi.vercel.app/api/graphql\",{\n        credentials: 'omit',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          query: gqlQueryPokemon,\n          variables: gqlVariables,\n        \n        }),\n        method: 'POST',\n      })\n        .then(res => res.json())\n        .then((result) => {\n          this.setState({ \n            pokemons: result.data.pokemons.results, \n            grow:true,\n            count:result.data.pokemons.count })\n        })\n        .catch(console.log)\n      }\n\n      setPage(value){\n        const gqlQueryPokemon = `query pokemons($limit: Int, $offset: Int) {\n          pokemons(limit: $limit, offset: $offset) {\n            count\n            next\n            previous\n            status\n            message\n            results {\n              url\n              name\n              image\n            }\n          }\n        }`;\n\n        const gqlVariables = {\n          limit: 20,\n          offset: (value-1)*20,\n        };\n        fetch(\"https://graphql-pokeapi.vercel.app/api/graphql\",{\n        credentials: 'omit',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          query: gqlQueryPokemon,\n          variables: gqlVariables,\n        \n        }),\n        method: 'POST',\n      })\n        .then(res => res.json())\n        .then((result) => {\n          this.setState({ \n            pokemons: result.data.pokemons.results, \n            grow:true,\n            count:result.data.pokemons.count })\n        })\n        .catch(console.log)\n      }\n\n\n      render() {\n        const {count}=this.state\n        const handleOpenCloseDetail=(url)=>{\n          const currentState = this.state.open\n          this.setState({ open : !currentState,url:url})\n        }\n        const handleChange = (event, value) => {\n          this.setPage(value);\n        };\n        var audienses = this.state.pokemons.map((tile,index) => (\n          <Grow in={this.state.grow}>\n                          <GridListTile className='gridTile' key={tile.name} >\n                            <img src={tile.image} alt={tile.name} />\n                            <GridListTileBar\n                              className='gridListTileBar'\n                              title={tile.name}   \n                              actionIcon={\n                                <IconButton className='icon' onClick={()=>handleOpenCloseDetail(tile.url)}>\n                                  <InfoIcon />\n                                </IconButton>\n                              }\n                            />\n                        </GridListTile>\n                        </Grow>\n       ));\n        return(\n              <Card className='card'>\n                  <div className='header'>\n                      List Pokemon\n                  </div>\n                  <div className='search'>\n                    Ini buat search\n                  </div>\n                  <div className='list'>\n                    <Card className='card-value'>\n                    <GridList cols={4} cellHeight={180} className='gridList'>\n                      <GridListTile cols={4} style={{ height: 'auto' }}>\n                      </GridListTile>\n                        {audienses}\n                     </GridList>\n                     <div className='pagination'>\n                     <Pagination count={(count/20).toFixed(0)} defaultPage={1} onChange={handleChange} boundaryCount={2} />\n                     </div>\n                     </Card>\n                 </div>\n\n                 <Dialog fullScreen open={this.state.open} onClose={handleOpenCloseDetail} >\n                  <AppBar className='appBar'>\n                    <Toolbar>\n                      <IconButton edge=\"start\" color=\"inherit\" onClick={handleOpenCloseDetail} aria-label=\"close\">\n                        <CloseIcon />\n                      </IconButton>\n                      <Typography variant=\"h6\" className='title'>\n                        Pokemon Detail\n                      </Typography>\n                    </Toolbar>\n                  </AppBar>\n                  <DetailPokemon url={this.state.url}/>\n                </Dialog>\n              </Card>\n             )\n      \n      }\n}\n\nexport default PokemonList;\n","import './App.css';\nimport PokemonList from './Containers/PokemmonList/PokemonList';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <PokemonList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}