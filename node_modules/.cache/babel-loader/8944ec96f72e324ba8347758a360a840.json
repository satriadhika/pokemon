{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/satria/Documents/pokemon/src/Containers/PokemmonList/PokemonList.js\";\nimport React, { Component } from 'react';\nimport './PokemonList.css';\nimport '../../App.css';\nimport logo from \"../../logo.svg\";\nimport Card from '@material-ui/core/Card';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport pokemonListData from '../../Component/PokemonList/PokemonListData.js';\nimport Pagination from '@material-ui/lab/Pagination';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Fab from '@material-ui/core/Fab';\nimport Grow from '@material-ui/core/Grow';\nimport TablePagination from '@material-ui/core/TablePagination';\n/**\n* @author\n* @function PokemonList\n**/\n\nclass PokemonList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      pokemons: [],\n      type: [],\n      grow: false,\n      next: '',\n      prev: '',\n      count: ''\n    };\n  }\n\n  componentDidMount() {\n    const gqlQueryPokemon = `query pokemons($limit: Int, $offset: Int) {\n        pokemons(limit: $limit, offset: $offset) {\n          count\n          next\n          previous\n          status\n          message\n          results {\n            url\n            name\n            image\n          }\n        }\n      }`;\n    const gqlVariables = {\n      limit: 20,\n      offset: 0\n    };\n    fetch(\"https://graphql-pokeapi.vercel.app/api/graphql\", {\n      credentials: 'omit',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: gqlQueryPokemon,\n        variables: gqlVariables\n      }),\n      method: 'POST'\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        pokemons: result.data.pokemons.results,\n        grow: true,\n        next: result.data.pokemons.next,\n        prev: result.data.pokemons.previous,\n        count: result.data.pokemons.count\n      });\n      console.log(result);\n    }).catch(console.log);\n  }\n\n  setPage(value) {\n    fetch(\"https://pokeapi.co/api/v2/pokemon/?offset=\" + (value - 1) * 20 + \"&limit=20\").then(res => res.json()).then(result => {\n      // this.setState({ \n      //   pokemons: result.data.pokemons.results, \n      //   grow:true,\n      //   next :result.data.pokemons.next,\n      //   prev :result.data.pokemons.previous,\n      //   count:result.data.pokemons.count })\n      console.log(result);\n    }).catch(console.log);\n  }\n\n  render() {\n    const {\n      next,\n      prev,\n      count\n    } = this.state;\n\n    const handleChange = (event, value) => {\n      this.setPage(value);\n    };\n\n    var audienses = this.state.pokemons.map((tile, index) => /*#__PURE__*/_jsxDEV(Grow, {\n      in: this.state.grow,\n      children: /*#__PURE__*/_jsxDEV(GridListTile, {\n        className: \"gridTile\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: tile.image,\n          alt: tile.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n          className: \"gridListTileBar\",\n          title: tile.name,\n          subtitle: [/*#__PURE__*/_jsxDEV(Fab, {\n            variant: \"extended\",\n            className: \"fab\",\n            children: tile.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }, this)],\n          actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": `info about adasdasdasda`,\n            className: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this));\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"List Pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: \"Ini buat search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"card-value\",\n          children: [/*#__PURE__*/_jsxDEV(GridList, {\n            cols: 4,\n            cellHeight: 180,\n            className: \"gridList\",\n            children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n              cols: 4,\n              style: {\n                height: 'auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 23\n            }, this), audienses]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination\",\n            children: /*#__PURE__*/_jsxDEV(Pagination, {\n              count: (count / 20).toFixed(0),\n              defaultPage: 1,\n              onChange: handleChange,\n              boundaryCount: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nexport default PokemonList;","map":{"version":3,"sources":["/Users/satria/Documents/pokemon/src/Containers/PokemmonList/PokemonList.js"],"names":["React","Component","Card","GridList","GridListTile","GridListTileBar","IconButton","InfoIcon","pokemonListData","Pagination","InputLabel","MenuItem","FormControl","Select","Chip","Avatar","DoneIcon","Fab","Grow","TablePagination","PokemonList","constructor","props","state","error","pokemons","type","grow","next","prev","count","componentDidMount","gqlQueryPokemon","gqlVariables","limit","offset","fetch","credentials","headers","body","JSON","stringify","query","variables","method","then","res","json","result","setState","data","results","previous","console","log","catch","setPage","value","render","handleChange","event","audienses","map","tile","index","image","name","url","height","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './PokemonList.css'\nimport '../../App.css';\nimport logo from '../../logo.svg'\nimport Card from '@material-ui/core/Card';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport pokemonListData from '../../Component/PokemonList/PokemonListData.js';\nimport Pagination from '@material-ui/lab/Pagination';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Fab from '@material-ui/core/Fab';\nimport Grow from '@material-ui/core/Grow';\nimport TablePagination from '@material-ui/core/TablePagination';\n\n/**\n* @author\n* @function PokemonList\n**/\n\nclass PokemonList extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      pokemons: [],\n      type: [],\n      grow: false,\n      next :'',\n      prev :'',\n      count:''\n    };\n  }\n\n    componentDidMount() {\n      const gqlQueryPokemon = `query pokemons($limit: Int, $offset: Int) {\n        pokemons(limit: $limit, offset: $offset) {\n          count\n          next\n          previous\n          status\n          message\n          results {\n            url\n            name\n            image\n          }\n        }\n      }`;\n      const gqlVariables = {\n        limit: 20,\n        offset: 0,\n      };\n\n        fetch(\"https://graphql-pokeapi.vercel.app/api/graphql\",{\n        credentials: 'omit',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          query: gqlQueryPokemon,\n          variables: gqlVariables,\n        \n        }),\n        method: 'POST',\n      })\n        .then(res => res.json())\n        .then((result) => {\n          this.setState({ \n            pokemons: result.data.pokemons.results, \n            grow:true,\n            next :result.data.pokemons.next,\n            prev :result.data.pokemons.previous,\n            count:result.data.pokemons.count })\n          console.log(result)\n        })\n        .catch(console.log)\n      }\n\n      setPage(value){\n        fetch(\"https://pokeapi.co/api/v2/pokemon/?offset=\"+(value-1)*20+\"&limit=20\")\n        .then(res => res.json())\n        .then((result) => {\n          // this.setState({ \n          //   pokemons: result.data.pokemons.results, \n          //   grow:true,\n          //   next :result.data.pokemons.next,\n          //   prev :result.data.pokemons.previous,\n          //   count:result.data.pokemons.count })\n          console.log(result)\n        })\n        .catch(console.log)\n      }\n\n      render() {\n        const {next,prev,count}=this.state\n\n        const handleChange = (event, value) => {\n          this.setPage(value);\n        };\n        var audienses = this.state.pokemons.map((tile,index) => (\n          <Grow in={this.state.grow}>\n                          <GridListTile className='gridTile' key={index} >\n                            <img src={tile.image} alt={tile.name} />\n                            <GridListTileBar\n                              className='gridListTileBar'\n                              title={tile.name} \n                              subtitle={[\n                                <Fab variant=\"extended\" className='fab'>\n                                  {tile.url}\n                                </Fab>\n                              ]}\n                              actionIcon={\n                                <IconButton aria-label={`info about adasdasdasda`} className='icon'>\n                                  <InfoIcon />\n                                </IconButton>\n                              }\n                            />\n                        </GridListTile>\n                        </Grow>\n       ));\n        return(\n              <Card className='card'>\n                  <div className='header'>\n                      List Pokemon\n                  </div>\n                  <div className='search'>\n                    Ini buat search\n                  </div>\n                  <div className='list'>\n                    <Card className='card-value'>\n                    <GridList cols={4} cellHeight={180} className='gridList'>\n                      <GridListTile cols={4} style={{ height: 'auto' }}>\n                      </GridListTile>\n                        {audienses}\n                     </GridList>\n                     <div className='pagination'>\n                     <Pagination count={(count/20).toFixed(0)} defaultPage={1} onChange={handleChange} boundaryCount={2} />\n                     </div>\n                     </Card>\n                 </div>\n              </Card>\n             )\n      \n      }\n}\n\nexport default PokemonList;\n"]},"metadata":{},"sourceType":"module"}