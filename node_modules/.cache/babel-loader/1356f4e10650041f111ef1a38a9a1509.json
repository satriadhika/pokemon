{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/satria/Documents/pokemon/src/Containers/DetailPokemon/DetailPokemon.js\";\nimport React, { Component } from 'react';\nimport './DetailPokemon.css';\n/**\n* @author\n* @function DetailPokemon\n**/\n\nclass DetailPokemon extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      pokemons: [],\n      grow: false,\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    const gqlQueryPokemon = `query pokemon($name: String!) {\n        pokemon(name: $name) {\n          id\n          name\n          sprites {\n            front_default\n          }\n          moves {\n            move {\n              name\n            }\n          }\n          types {\n            type {\n              name\n            }\n          }\n        }\n      }`;\n    const gqlVariables = {\n      name: \"ditto\"\n    };\n    fetch(\"https://graphql-pokeapi.vercel.app/api/graphql\", {\n      credentials: 'omit',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: gqlQueryPokemon,\n        variables: gqlVariables\n      }),\n      method: 'POST'\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        pokemons: result.data.pokemon,\n        grow: true\n      });\n      console.log(result);\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default DetailPokemon;","map":{"version":3,"sources":["/Users/satria/Documents/pokemon/src/Containers/DetailPokemon/DetailPokemon.js"],"names":["React","Component","DetailPokemon","constructor","props","state","error","pokemons","grow","open","componentDidMount","console","log","gqlQueryPokemon","gqlVariables","name","fetch","credentials","headers","body","JSON","stringify","query","variables","method","then","res","json","result","setState","data","pokemon","catch","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,qBAAP;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAqC;AAEnCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,IAAI,EAAE,KAHK;AAIXC,MAAAA,IAAI,EAAC;AAJM,KAAb;AAMD;;AAECC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AACA,UAAMS,eAAe,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAlBM;AAmBA,UAAMC,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIEC,IAAAA,KAAK,CAAC,gDAAD,EAAkD;AACvDC,MAAAA,WAAW,EAAE,MAD0C;AAEvDC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF8C;AAGvDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAET,eADY;AAEnBU,QAAAA,SAAS,EAAET;AAFQ,OAAf,CAHiD;AAQvDU,MAAAA,MAAM,EAAE;AAR+C,KAAlD,CAAL,CAUCC,IAVD,CAUMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAVb,EAWCF,IAXD,CAWOG,MAAD,IAAY;AAChB,WAAKC,QAAL,CAAc;AACZtB,QAAAA,QAAQ,EAAEqB,MAAM,CAACE,IAAP,CAAYC,OADV;AAEZvB,QAAAA,IAAI,EAAC;AAFO,OAAd;AAGAG,MAAAA,OAAO,CAACC,GAAR,CAAYgB,MAAZ;AACD,KAhBD,EAiBCI,KAjBD,CAiBOrB,OAAO,CAACC,GAjBf;AAkBD;;AAIDqB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AA/D8B;;AAkErC,eAAe/B,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport './DetailPokemon.css'\n\n/**\n* @author\n* @function DetailPokemon\n**/\n\nclass DetailPokemon extends Component{\n \n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      pokemons: [],\n      grow: false,\n      open:false\n    };\n  }\n\n    componentDidMount() {\n      console.log(this.props)\n      const gqlQueryPokemon = `query pokemon($name: String!) {\n        pokemon(name: $name) {\n          id\n          name\n          sprites {\n            front_default\n          }\n          moves {\n            move {\n              name\n            }\n          }\n          types {\n            type {\n              name\n            }\n          }\n        }\n      }`;\n      const gqlVariables = {\n        name: \"ditto\"\n      };\n\n        fetch(\"https://graphql-pokeapi.vercel.app/api/graphql\",{\n        credentials: 'omit',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          query: gqlQueryPokemon,\n          variables: gqlVariables,\n        \n        }),\n        method: 'POST',\n      })\n        .then(res => res.json())\n        .then((result) => {\n          this.setState({ \n            pokemons: result.data.pokemon, \n            grow:true})\n          console.log(result)\n        })\n        .catch(console.log)\n      }\n\n\n\n      render() {\n        return(\n          <div>test</div>\n        )\n      }\n }\n\nexport default DetailPokemon;"]},"metadata":{},"sourceType":"module"}