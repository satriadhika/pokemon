{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/satria/Documents/pokemon/src/Containers/PokemmonList/PokemonList.js\";\nimport React, { Component } from 'react';\nimport './PokemonList.css';\nimport '../../App.css';\nimport Card from '@material-ui/core/Card';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Fab from '@material-ui/core/Fab';\nimport Grow from '@material-ui/core/Grow';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\n/**\n* @author\n* @function PokemonList\n**/\n\nclass PokemonList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      pokemons: [],\n      grow: false,\n      count: '',\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    const gqlQueryPokemon = `query pokemons($limit: Int, $offset: Int) {\n        pokemons(limit: $limit, offset: $offset) {\n          count\n          next\n          previous\n          status\n          message\n          results {\n            url\n            name\n            image\n          }\n        }\n      }`;\n    const gqlVariables = {\n      limit: 20,\n      offset: 0\n    };\n    fetch(\"https://graphql-pokeapi.vercel.app/api/graphql\", {\n      credentials: 'omit',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: gqlQueryPokemon,\n        variables: gqlVariables\n      }),\n      method: 'POST'\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        pokemons: result.data.pokemons.results,\n        grow: true,\n        count: result.data.pokemons.count\n      });\n      console.log(result);\n    }).catch(console.log);\n  }\n\n  setPage(value) {\n    const gqlQueryPokemon = `query pokemons($limit: Int, $offset: Int) {\n          pokemons(limit: $limit, offset: $offset) {\n            count\n            next\n            previous\n            status\n            message\n            results {\n              url\n              name\n              image\n            }\n          }\n        }`;\n    const gqlVariables = {\n      limit: 20,\n      offset: (value - 1) * 20\n    };\n    fetch(\"https://graphql-pokeapi.vercel.app/api/graphql\", {\n      credentials: 'omit',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: gqlQueryPokemon,\n        variables: gqlVariables\n      }),\n      method: 'POST'\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        pokemons: result.data.pokemons.results,\n        grow: true,\n        count: result.data.pokemons.count\n      });\n      console.log(result);\n    }).catch(console.log);\n  }\n\n  render() {\n    const handleOpenCloseDetail = () => {\n      const currentState = this.state.open;\n      this.setState({\n        open: !currentState\n      });\n    };\n\n    const {\n      count\n    } = this.state;\n\n    const handleChange = (event, value) => {\n      this.setPage(value);\n    };\n\n    var audienses = this.state.pokemons.map((tile, index) => /*#__PURE__*/_jsxDEV(Grow, {\n      in: this.state.grow,\n      children: /*#__PURE__*/_jsxDEV(GridListTile, {\n        className: \"gridTile\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: tile.image,\n          alt: tile.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n          className: \"gridListTileBar\",\n          title: tile.name,\n          subtitle: [/*#__PURE__*/_jsxDEV(Fab, {\n            variant: \"extended\",\n            className: \"fab\",\n            children: tile.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 33\n          }, this)],\n          actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n            className: \"icon\",\n            onClick: handleOpenCloseDetail,\n            children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }, this));\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"List Pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: \"Ini buat search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"card-value\",\n          children: [/*#__PURE__*/_jsxDEV(GridList, {\n            cols: 4,\n            cellHeight: 180,\n            className: \"gridList\",\n            children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n              cols: 4,\n              style: {\n                height: 'auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 23\n            }, this), audienses]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination\",\n            children: /*#__PURE__*/_jsxDEV(Pagination, {\n              count: (count / 20).toFixed(0),\n              defaultPage: 1,\n              onChange: handleChange,\n              boundaryCount: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        fullScreen: true,\n        open: this.state.open,\n        onClose: handleOpenCloseDetail,\n        children: /*#__PURE__*/_jsxDEV(AppBar, {\n          className: \"appBar\",\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"start\",\n              color: \"inherit\",\n              onClick: handleOpenCloseDetail,\n              \"aria-label\": \"close\",\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              className: \"title\",\n              children: \"Detail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nexport default PokemonList;","map":{"version":3,"sources":["/Users/satria/Documents/pokemon/src/Containers/PokemmonList/PokemonList.js"],"names":["React","Component","Card","GridList","GridListTile","GridListTileBar","IconButton","InfoIcon","Pagination","Fab","Grow","Dialog","AppBar","Toolbar","Typography","CloseIcon","PokemonList","constructor","props","state","error","pokemons","grow","count","open","componentDidMount","gqlQueryPokemon","gqlVariables","limit","offset","fetch","credentials","headers","body","JSON","stringify","query","variables","method","then","res","json","result","setState","data","results","console","log","catch","setPage","value","render","handleOpenCloseDetail","currentState","handleChange","event","audienses","map","tile","index","image","name","url","height","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './PokemonList.css'\nimport '../../App.css';\nimport Card from '@material-ui/core/Card';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Fab from '@material-ui/core/Fab';\nimport Grow from '@material-ui/core/Grow';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\n/**\n* @author\n* @function PokemonList\n**/\n\n\nclass PokemonList extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      pokemons: [],\n      grow: false,\n      count:'',\n      open:false\n    };\n  }\n\n    componentDidMount() {\n      const gqlQueryPokemon = `query pokemons($limit: Int, $offset: Int) {\n        pokemons(limit: $limit, offset: $offset) {\n          count\n          next\n          previous\n          status\n          message\n          results {\n            url\n            name\n            image\n          }\n        }\n      }`;\n      const gqlVariables = {\n        limit: 20,\n        offset: 0,\n      };\n\n        fetch(\"https://graphql-pokeapi.vercel.app/api/graphql\",{\n        credentials: 'omit',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          query: gqlQueryPokemon,\n          variables: gqlVariables,\n        \n        }),\n        method: 'POST',\n      })\n        .then(res => res.json())\n        .then((result) => {\n          this.setState({ \n            pokemons: result.data.pokemons.results, \n            grow:true,\n            count:result.data.pokemons.count })\n          console.log(result)\n        })\n        .catch(console.log)\n      }\n      \n\n      \n\n      setPage(value){\n        const gqlQueryPokemon = `query pokemons($limit: Int, $offset: Int) {\n          pokemons(limit: $limit, offset: $offset) {\n            count\n            next\n            previous\n            status\n            message\n            results {\n              url\n              name\n              image\n            }\n          }\n        }`;\n\n        const gqlVariables = {\n          limit: 20,\n          offset: (value-1)*20,\n        };\n        fetch(\"https://graphql-pokeapi.vercel.app/api/graphql\",{\n        credentials: 'omit',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          query: gqlQueryPokemon,\n          variables: gqlVariables,\n        \n        }),\n        method: 'POST',\n      })\n        .then(res => res.json())\n        .then((result) => {\n          this.setState({ \n            pokemons: result.data.pokemons.results, \n            grow:true,\n            count:result.data.pokemons.count })\n          console.log(result)\n        })\n        .catch(console.log)\n      }\n\n\n      render() {\n        const handleOpenCloseDetail=()=>{\n          const currentState = this.state.open\n          this.setState({ open : !currentState })\n        }\n        const {count}=this.state\n        const handleChange = (event, value) => {\n          this.setPage(value);\n        };\n        var audienses = this.state.pokemons.map((tile,index) => (\n          <Grow in={this.state.grow}>\n                          <GridListTile className='gridTile' key={index} >\n                            <img src={tile.image} alt={tile.name} />\n                            <GridListTileBar\n                              className='gridListTileBar'\n                              title={tile.name} \n                              subtitle={[\n                                <Fab variant=\"extended\" className='fab'>\n                                  {tile.url}\n                                </Fab>\n                              ]}\n                              actionIcon={\n                                <IconButton className='icon' onClick={handleOpenCloseDetail}>\n                                  <InfoIcon />\n                                </IconButton>\n                              }\n                            />\n                        </GridListTile>\n                        </Grow>\n       ));\n        return(\n              <Card className='card'>\n                  <div className='header'>\n                      List Pokemon\n                  </div>\n                  <div className='search'>\n                    Ini buat search\n                  </div>\n                  <div className='list'>\n                    <Card className='card-value'>\n                    <GridList cols={4} cellHeight={180} className='gridList'>\n                      <GridListTile cols={4} style={{ height: 'auto' }}>\n                      </GridListTile>\n                        {audienses}\n                     </GridList>\n                     <div className='pagination'>\n                     <Pagination count={(count/20).toFixed(0)} defaultPage={1} onChange={handleChange} boundaryCount={2} />\n                     </div>\n                     </Card>\n                 </div>\n\n                 <Dialog fullScreen open={this.state.open} onClose={handleOpenCloseDetail} >\n                  <AppBar className='appBar'>\n                    <Toolbar>\n                      <IconButton edge=\"start\" color=\"inherit\" onClick={handleOpenCloseDetail} aria-label=\"close\">\n                        <CloseIcon />\n                      </IconButton>\n                      <Typography variant=\"h6\" className='title'>\n                        Detail\n                      </Typography>\n                    </Toolbar>\n                  </AppBar>\n                  \n                </Dialog>\n              </Card>\n             )\n      \n      }\n}\n\nexport default PokemonList;\n"]},"metadata":{},"sourceType":"module"}